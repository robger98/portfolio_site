// This file is auto-generated by @hey-api/openapi-ts

export type GitElement = {
    name?: string;
    is_dir: boolean;
    size?: number;
    full_path: string;
    children?: Array<GitElement>;
    parent_name?: string | null;
    error?: string | null;
};

export type GitFile = {
    name: string;
    language: string;
    path: string;
    size: number;
    html_url: string;
    content: string;
};

export type HttpValidationError = {
    detail?: Array<ValidationError>;
};

export type Message = {
    role: string;
    content: string;
};

export type ValidationError = {
    loc: Array<string | number>;
    msg: string;
    type: string;
};

export type GetMessagesMessagesGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/messages';
};

export type GetMessagesMessagesGetResponses = {
    /**
     * Successful Response
     */
    200: Array<Message>;
};

export type GetMessagesMessagesGetResponse = GetMessagesMessagesGetResponses[keyof GetMessagesMessagesGetResponses];

export type SendSendPostData = {
    body: Array<Message>;
    path?: never;
    query?: never;
    url: '/send';
};

export type SendSendPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type SendSendPostError = SendSendPostErrors[keyof SendSendPostErrors];

export type SendSendPostResponses = {
    /**
     * Successful Response
     */
    200: Message;
};

export type SendSendPostResponse = SendSendPostResponses[keyof SendSendPostResponses];

export type GetBranchesRepoAccountRepoNameBranchesGetData = {
    body?: never;
    path: {
        account: string;
        repo_name: string;
    };
    query?: never;
    url: '/repo/{account}/{repo_name}/branches';
};

export type GetBranchesRepoAccountRepoNameBranchesGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetBranchesRepoAccountRepoNameBranchesGetError = GetBranchesRepoAccountRepoNameBranchesGetErrors[keyof GetBranchesRepoAccountRepoNameBranchesGetErrors];

export type GetBranchesRepoAccountRepoNameBranchesGetResponses = {
    /**
     * Successful Response
     */
    200: Array<string>;
};

export type GetBranchesRepoAccountRepoNameBranchesGetResponse = GetBranchesRepoAccountRepoNameBranchesGetResponses[keyof GetBranchesRepoAccountRepoNameBranchesGetResponses];

export type GetRepoRepoAccountRepoNameBranchGetData = {
    body?: never;
    path: {
        account: string;
        repo_name: string;
        branch: string;
    };
    query?: never;
    url: '/repo/{account}/{repo_name}/{branch}';
};

export type GetRepoRepoAccountRepoNameBranchGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetRepoRepoAccountRepoNameBranchGetError = GetRepoRepoAccountRepoNameBranchGetErrors[keyof GetRepoRepoAccountRepoNameBranchGetErrors];

export type GetRepoRepoAccountRepoNameBranchGetResponses = {
    /**
     * Successful Response
     */
    200: GitElement;
};

export type GetRepoRepoAccountRepoNameBranchGetResponse = GetRepoRepoAccountRepoNameBranchGetResponses[keyof GetRepoRepoAccountRepoNameBranchGetResponses];

export type GetFileRepoAccountRepoNameBranchPathGetData = {
    body?: never;
    path: {
        account: string;
        repo_name: string;
        branch: string;
        path: string;
    };
    query?: never;
    url: '/repo/{account}/{repo_name}/{branch}/{path}';
};

export type GetFileRepoAccountRepoNameBranchPathGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetFileRepoAccountRepoNameBranchPathGetError = GetFileRepoAccountRepoNameBranchPathGetErrors[keyof GetFileRepoAccountRepoNameBranchPathGetErrors];

export type GetFileRepoAccountRepoNameBranchPathGetResponses = {
    /**
     * Successful Response
     */
    200: GitFile;
};

export type GetFileRepoAccountRepoNameBranchPathGetResponse = GetFileRepoAccountRepoNameBranchPathGetResponses[keyof GetFileRepoAccountRepoNameBranchPathGetResponses];